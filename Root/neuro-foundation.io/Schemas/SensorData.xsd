<?xml version='1.0' encoding='UTF-8'?>
<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:ieee:iot:sd:1.0'
    xmlns='urn:ieee:iot:sd:1.0'
    elementFormDefault='qualified'>

	<!--
Copyright 2017-2021 The Institute of Electrical and Electronics Engineers, 
Incorporated (IEEE).

This work is licensed to The Institute of Electrical and Electronics
Engineers, Incorporated (IEEE) under one or more contributor license
agreements.

See the LICENSE.md file distributed with this work for additional
information regarding copyright ownership. Use of this file is
governed by a BSD-style license, the terms of which are as follows:

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

Redistributions of source code must retain the above copyright
notice, this list of conditions, the following disclaimer, and the
NOTICE file.
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions, the following disclaimer in the
documentation and/or other materials provided with the
distribution, and the NOTICE file.
Neither the name of The Institute of Electrical and Electronics
Engineers, Incorporated (IEEE) nor the names of its contributors
may be used to endorse or promote products derived from this
software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

SPDX-License-Identifier: BSD-3-Clause
  
Disclaimer: This open source repository contains material that may be 
included-in or referenced by an unapproved draft of a proposed IEEE 
Standard. All material in this repository is subject to change. The 
material in this repository is presented "as is" and with all faults. 
Use of the material is at the sole risk of the user. IEEE specifically 
disclaims all warranties and representations with respect to all 
material contained in this repository and shall not be liable, under 
any theory, for any use of the material. Unapproved drafts of proposed 
IEEE standards must not be utilized for any conformance/compliance 
purposes.
-->

	<xs:element name='nd'>
		<xs:annotation>
			<xs:documentation>Represents a node. This element can be omitted if the device is not divided into nodes.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence minOccurs='0' maxOccurs='unbounded'>
				<xs:element ref='ts'>
					<xs:annotation>
						<xs:documentation>Represents one point in time, when sensor data is available.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:attributeGroup ref='nodeIdentity'>
				<xs:annotation>
					<xs:documentation>Identity of node, if relevant.</xs:documentation>
				</xs:annotation>
			</xs:attributeGroup>
		</xs:complexType>
	</xs:element>

	<xs:attributeGroup name='nodeIdentity'>
		<xs:annotation>
			<xs:documentation>Defines attributes for the identification of a node in a device.</xs:documentation>
		</xs:annotation>
		<xs:attribute name='id' type='xs:string' use='required'>
			<xs:annotation>
				<xs:documentation>Node identity. (Required)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='src' type='xs:string' use='optional'>
			<xs:annotation>
				<xs:documentation>Source identity. (Optional. Scopes the node identity.)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='pt' type='xs:string' use='optional'>
			<xs:annotation>
				<xs:documentation>Source partition. (Optional. Scopes the node identity, within a source.)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>

	<xs:element name='ts'>
		<xs:annotation>
			<xs:documentation>Represents a timestamp. This element can be omitted, if the device only reports current values.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice minOccurs='0' maxOccurs='unbounded'>
				<xs:element ref='b'/>
				<xs:element ref='d'/>
				<xs:element ref='dt'/>
				<xs:element ref='dr'/>
				<xs:element ref='e'/>
				<xs:element ref='i'/>
				<xs:element ref='l'/>
				<xs:element ref='q'/>
				<xs:element ref='s'/>
				<xs:element ref='t'/>
				<xs:element ref='err'/>
			</xs:choice>
			<xs:attribute name='v' type='xs:dateTime' use='required'/>
		</xs:complexType>
	</xs:element>

	<xs:attributeGroup name='category'>
		<xs:annotation>
			<xs:documentation>Combinable attributes defining the category of a field or a set of fields.</xs:documentation>
		</xs:annotation>
		<xs:attribute name='m' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>If the field represents a momentary value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='p' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>If the field represents a peak value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='s' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>If the field represents a status value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='c' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>If the field represents a computed value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='i' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>If the field represents an indentity value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='h' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>If the field represents a historical value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>

	<xs:complexType name='field' abstract='true'>
		<xs:annotation>
			<xs:documentation>Base type for all data-carrying fields.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name='x' minOccurs='0' maxOccurs='1'>
				<xs:annotation>
					<xs:documentation>The optional x element can be used to extend the annotation of the field using custom features.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:any namespace='##any' minOccurs='0' maxOccurs='unbounded'>
							<xs:annotation>
								<xs:documentation>Any child elements can be added to the x element.</xs:documentation>
								<xs:documentation>Only fully qualified elements (i.e. using a namespace) that have been approved by a standards group can be used for interoperable features.</xs:documentation>
							</xs:annotation>
						</xs:any>
					</xs:choice>
					<xs:anyAttribute namespace='##any'>
						<xs:annotation>
							<xs:documentation>Annotation of fields can be done using any attribute on the x element.</xs:documentation>
							<xs:documentation>Only fully qualified attributes (i.e. using a namespace) that have been approved by a standards group can be used for interoperable features.</xs:documentation>
						</xs:annotation>
					</xs:anyAttribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="n" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Name of the field.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref='category'>
			<xs:annotation>
				<xs:documentation>Field category, defined as a set of attributes.</xs:documentation>
			</xs:annotation>
		</xs:attributeGroup>
		<xs:attributeGroup ref='qos'>
			<xs:annotation>
				<xs:documentation>Quality of Service level for the field.</xs:documentation>
			</xs:annotation>
		</xs:attributeGroup>
		<xs:attribute name="lns" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Localization namespace. Defines under what namespace localization IDs are defined.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="loc" type="Localization" use="optional">
			<xs:annotation>
				<xs:documentation>Localization information.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ctr" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>If the field has a corresponding control parameter with the same name.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:simpleType name="Localization">
		<xs:annotation>
			<xs:documentation>Formatting of localization informaton.</xs:documentation>
			<xs:documentation>Localization information is divided into steps. The steps are delimited by commas ','.</xs:documentation>
			<xs:documentation>Each step can be of the form: 'ID', 'ID|NS' or 'ID|NS|SEED', where ID is a positive integer representing a localized string.</xs:documentation>
			<xs:documentation>NS represents a namespace under which the ID is defined. If empty, the default namespace defined in the lns attribute will be used.</xs:documentation>
			<xs:documentation>SEED is a seed value, that can be used to seed the localization string.</xs:documentation>
			<xs:documentation>'%0%' in localized strings will be replaced by the previous step in the localization sequence.</xs:documentation>
			<xs:documentation>'%1%' in localized strings will be replaced by the seed value.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="^\d+([|][^,]*){0,2}(,\d+([|][^,]*){0,2})*$"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:attributeGroup name='qos'>
		<xs:attribute name='ms' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>Value is missing.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='pr' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>Value is in the progress of being calculated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='ae' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>Value is an automated estimate.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='me' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>Value is a manual estimate.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='mr' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>Value is the result of a manual readout.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='ar' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>Value is the result of an automatic readout.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='of' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>The internal clock is offset more than an allowed value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='w' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>A warning has been logged, related to the value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='er' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>An error has been logged, related to the value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='so' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>The value has been signed by an operator.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='iv' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>The value has been used for the creation of an invoice.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='eos' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>The value represents the last of a series of values.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='pf' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>Power failure has been registered, concerning the value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name='ic' type='xs:boolean' use='optional' default='false'>
			<xs:annotation>
				<xs:documentation>The invoice created on the basis of the value, has been confirmed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>

	<xs:element name='q'>
		<xs:annotation>
			<xs:documentation>Represents a physical quantity.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:double" use="required">
						<xs:annotation>
							<xs:documentation>Value of the physical quantity. Precision is given by the number of decimal digits.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="u" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Optional unit string.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='s'>
		<xs:annotation>
			<xs:documentation>Represents a string-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>String value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="b">
		<xs:annotation>
			<xs:documentation>Represents a boolean-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:boolean" use="required">
						<xs:annotation>
							<xs:documentation>Boolean value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="d">
		<xs:annotation>
			<xs:documentation>Represents a date-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:date" use="required">
						<xs:annotation>
							<xs:documentation>Date value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="dt">
		<xs:annotation>
			<xs:documentation>Represents a date and time-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:dateTime" use="required">
						<xs:annotation>
							<xs:documentation>Date and time value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="dr">
		<xs:annotation>
			<xs:documentation>Represents a duration-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:duration" use="required">
						<xs:annotation>
							<xs:documentation>Duration value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="e">
		<xs:annotation>
			<xs:documentation>Represents an enumeration field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Enumeration value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="t" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Enumeration type.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="i">
		<xs:annotation>
			<xs:documentation>Represents a 32-bit signed integer-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:int" use="required">
						<xs:annotation>
							<xs:documentation>32-bit signed integer value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="l">
		<xs:annotation>
			<xs:documentation>Represents a 64-bit signed integer-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:long" use="required">
						<xs:annotation>
							<xs:documentation>64-bit signed integer value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="t">
		<xs:annotation>
			<xs:documentation>Represents a time-valued field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='field'>
					<xs:attribute name="v" type="xs:time" use="required">
						<xs:annotation>
							<xs:documentation>Time value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="err">
		<xs:annotation>
			<xs:documentation>Represents an error that occurred during processing of the request.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string"/>
		</xs:simpleType>
	</xs:element>


	<xs:element name='req'>
		<xs:annotation>
			<xs:documentation>Defines a request for sensor data.</xs:documentation>
			<xs:documentation>This element is sent in an iq get stanza.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice minOccurs='0' maxOccurs='unbounded'>
				<xs:element name='nd'>
					<xs:annotation>
						<xs:documentation>Defines a node restriction of the request.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attributeGroup ref='nodeIdentity'>
							<xs:annotation>
								<xs:documentation>Identity of node.</xs:documentation>
							</xs:annotation>
						</xs:attributeGroup>
					</xs:complexType>
				</xs:element>
				<xs:element name='f'>
					<xs:annotation>
						<xs:documentation>Defines a field restriction of the request.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name='n' type='xs:string' use='required'>
							<xs:annotation>
								<xs:documentation>Field name.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name='id' type='xs:string' use='required'>
				<xs:annotation>
					<xs:documentation>Identity of request. Is used to match response messages to the original request.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attributeGroup ref='category'>
				<xs:annotation>
					<xs:documentation>Categories of fields requested.</xs:documentation>
				</xs:annotation>
			</xs:attributeGroup>
			<xs:attribute name='all' type='xs:boolean' use='optional' default='false'>
				<xs:annotation>
					<xs:documentation>Field used to request all categories of fields.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='from' type='xs:dateTime' use='optional'>
				<xs:annotation>
					<xs:documentation>The earliest timestamp requested.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='to' type='xs:dateTime' use='optional'>
				<xs:annotation>
					<xs:documentation>The latest timestamp requested.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='when' type='xs:dateTime' use='optional'>
				<xs:annotation>
					<xs:documentation>When the request is desired to be executed.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='st' type='xs:string' use='optional'>
				<xs:annotation>
					<xs:documentation>Service tokens, separated by spaces if they are more than one, identifying the service generating the original request.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='dt' type='xs:string' use='optional'>
				<xs:annotation>
					<xs:documentation>Device tokens, separated by spaces if they are more than one, identifying the device generating the original request.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='ut' type='xs:string' use='optional'>
				<xs:annotation>
					<xs:documentation>User tokens, separated by spaces if they are more than one, identifying the user generating the original request.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<xs:complexType name='reqref' abstract='true'>
		<xs:annotation>
			<xs:documentation>Base type of all elements referring to a request.</xs:documentation>
		</xs:annotation>
		<xs:attribute name='id' type='xs:string' use='required'>
			<xs:annotation>
				<xs:documentation>Identity of request. Is used to match response messages to the original request.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:element name='accepted'>
		<xs:annotation>
			<xs:documentation>Request has been accepted. Response will be sent asynchronously using asynchronous messages.</xs:documentation>
			<xs:documentation>This element can be returned in an iq result stanza.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='reqref'>
					<xs:attribute name='queued' type='xs:boolean' use='optional' default='false'>
						<xs:annotation>
							<xs:documentation>If the request has been queued for later processing.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='started'>
		<xs:annotation>
			<xs:documentation>Processing of request has been started. Response will be sent asynchronously using asynchronous messages.</xs:documentation>
			<xs:documentation>This element can be returned in an iq result stanza, or as an asynchronous message, if the accepted element was returned as a result.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='reqref'/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='resp'>
		<xs:annotation>
			<xs:documentation>Contains sensor data response, in response to a request.</xs:documentation>
			<xs:documentation>This element can be returned in an iq result stanza, or as an asynchronous message, if the accepted element was returned as a result.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='reqref'>
					<xs:choice minOccurs='1' maxOccurs='1'>
						<xs:element ref='nd' minOccurs='0' maxOccurs='unbounded'>
							<xs:annotation>
								<xs:documentation>If sensor data is being reported from a node in the device.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref='ts' minOccurs='0' maxOccurs='unbounded'>
							<xs:annotation>
								<xs:documentation>If sensor data is being reported from a device that is not divided into nodes.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:attribute name='more' type='xs:boolean' use='optional' default='false'>
						<xs:annotation>
							<xs:documentation>If more data is pending for the corresponding request.</xs:documentation>
							<xs:documentation> If attribute value is omitted, or false, response is considered to be complete.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='cancel'>
		<xs:annotation>
			<xs:documentation>Cancel a request.</xs:documentation>
			<xs:documentation>This element is sent in an iq set stanza.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='reqref'/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='done'>
		<xs:annotation>
			<xs:documentation>Request has been completed</xs:documentation>
			<xs:documentation>This element is sent as an asynchronous message, since a response has already been returned.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='reqref'/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

</xs:schema>