<?xml version='1.0' encoding='UTF-8'?>
<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:ieee:iot:prov:t:1.0'
    xmlns='urn:ieee:iot:prov:t:1.0'
    elementFormDefault='qualified'>

	<!--
Copyright 2017-2021 The Institute of Electrical and Electronics Engineers, 
Incorporated (IEEE).

This work is licensed to The Institute of Electrical and Electronics
Engineers, Incorporated (IEEE) under one or more contributor license
agreements.

See the LICENSE.md file distributed with this work for additional
information regarding copyright ownership. Use of this file is
governed by a BSD-style license, the terms of which are as follows:

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

Redistributions of source code must retain the above copyright
notice, this list of conditions, the following disclaimer, and the
NOTICE file.
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions, the following disclaimer in the
documentation and/or other materials provided with the
distribution, and the NOTICE file.
Neither the name of The Institute of Electrical and Electronics
Engineers, Incorporated (IEEE) nor the names of its contributors
may be used to endorse or promote products derived from this
software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

SPDX-License-Identifier: BSD-3-Clause
  
Disclaimer: This open source repository contains material that may be 
included-in or referenced by an unapproved draft of a proposed IEEE 
Standard. All material in this repository is subject to change. The 
material in this repository is presented "as is" and with all faults. 
Use of the material is at the sole risk of the user. IEEE specifically 
disclaims all warranties and representations with respect to all 
material contained in this repository and shall not be liable, under 
any theory, for any use of the material. Unapproved drafts of proposed 
IEEE standards must not be utilized for any conformance/compliance 
purposes.
-->

	<xs:element name='getToken' type='xs:base64Binary'>
		<xs:annotation>
			<xs:documentation>Gets a token from the provisioning server.</xs:documentation>
			<xs:documentation>The contents of the element should be the BASE64 encoded public part of a X.509 certificate, for which the server is to provide a token.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name='getTokenChallenge'>
		<xs:annotation>
			<xs:documentation>The provisioning server response to the getToken request with a challenge. It contains BASE64-encoded binary data, encrypted with the public key of the certificate provided.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base='xs:base64Binary'>
					<xs:annotation>
						<xs:documentation>BASE64-encoded binary data, encrypted with the public key of the certificate provided.</xs:documentation>
					</xs:annotation>
					<xs:attribute name='seqnr' type='xs:int' use='required'>
						<xs:annotation>
							<xs:documentation>A sequence number identifying the challenge.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='getTokenChallengeResponse'>
		<xs:annotation>
			<xs:documentation>The device responds to the challenge issuing a new request, containing the decrypted binary data, BASE64-encoded, to the provisioning server.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base='xs:base64Binary'>
					<xs:annotation>
						<xs:documentation>BASE64-encoded binary data, decrypted with the private part of the certificate for which the device wants to get a token.</xs:documentation>
					</xs:annotation>
					<xs:attribute name='seqnr' type='xs:int' use='required'>
						<xs:annotation>
							<xs:documentation>A sequence number identifying the challenge.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='getTokenResponse'>
		<xs:annotation>
			<xs:documentation>On the receipt of a successful response to the challenge, the provisioning server responds with a token.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name='token' type='xs:string' use='required'>
				<xs:annotation>
					<xs:documentation>Token the device can use in distributed transactions, instead of the certificate, for identification.</xs:documentation>
					<xs:documentation>The format of the token should be the address of the provisioning server issuing the token, followed by a colon (:), followed by a random string with sufficient entropy.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<xs:element name='getCertificate'>
		<xs:annotation>
			<xs:documentation>Anyone presented with a token, can send a request with this element to the provisioning server in order to get the public part of the corresponding X.509 certificate.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name='token' type='xs:string' use='required'>
				<xs:annotation>
					<xs:documentation>Token for which the certificate is related.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<xs:element name='certificate' type='xs:base64Binary'>
		<xs:annotation>
			<xs:documentation>Contains an X.509 certificate.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name='tokenChallenge'>
		<xs:annotation>
			<xs:documentation>The recipient of a token can challenge the sender, especially the first time a token is received from a given sender.</xs:documentation>
			<xs:documentation>The challenge consists of a BASE-64 encoded encrypted binary challenge, that the sender needs to decrypt and return.</xs:documentation>
			<xs:documentation>In distributed transactions, where tokens are forwarded, challenges need to be forwarded to the original issuer of the request.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base='xs:base64Binary'>
					<xs:annotation>
						<xs:documentation>BASE-64 encoded encrypted binary challenge</xs:documentation>
					</xs:annotation>
					<xs:attribute name='token' type='xs:string' use='required'>
						<xs:annotation>
							<xs:documentation>Token being challenged.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name='tokenChallengeResponse' type='xs:base64Binary'>
		<xs:annotation>
			<xs:documentation>Decrypted binary data, as a response to the challenge.</xs:documentation>
		</xs:annotation>
	</xs:element>

</xs:schema>